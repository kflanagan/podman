#!/bin/bash

# Full podman container setup, change the two variables here at the top for you>
## - Create a user for the container
## - Create that users homedir
## - Create a directory for your volumes
## - Check to see if the container is running
### -- If the container isn't running, remove it
## - Start the container - volume info is specific to each container, so that w>

###################################### 
##The variables here will need to be adjusted for your installation
container_name="homarr"
BaseDir=/home/$container_name
#####################################


# Add the user if it doesn't exist 
useradd $container_name || echo "User already exists."



# create the directory for the docker volumes if it doesn't exist

if [ ! -d /home/$container_name ];then
     if ! mkdir /home/$container_name; then  # Shorter version. Shell will comp>
     echo "Can't make dir: $container_name"
     fi
fi


###############   Custom directories  ##########################
if [ ! -d /home/$container_name/configs ];then
     if ! mkdir /home/$container_name/configs; then  # Shorter version. Shell will comp>
     echo "Can't make dir: $container_name/configs"
     fi
fi

if [ ! -d /home/$container_name/data ];then
     if ! mkdir /home/$container_name/data; then  # Shorter version. Shell will comp>
     echo "Can't make dir: $container_name/data"
     fi
fi

if [ ! -d /home/$container_name/icons ];then
     if ! mkdir /home/$container_name/icons; then  # Shorter version. Shell will comp>
     echo "Can't make dir: $container_name/icons"
     fi
fi

##############   Custom directories  #########################


# Get the user and group ID for below
#container_id="$(echo $newvar | awk -F "=" '{print $2}' | awk -F "(" '{print$1}'
#container_grp="$(echo $newvar | awk -F "gid=" '{print $2}' | awk -F "(" '{print}'

container_id=$(id -u $container_name)
container_group=$(id -g $container_name)




# Create the media directory if it doesn't exist

#if [ ! -d $BaseDir ];then
#     if ! mkdir $BaseDir; then  
#     echo "Can't make dir: $BaseDir"
#     ## Set the owner and group to be the new ID for that directory you just ma>
#     chown -R $container_id:$container_grp $basedir
#     fi
#fi




# Now see if the container is running already

# if [ "$(podman ps -q -f name=$container_name)" ]; then
#     echo "Container $container_name is running, nothing to do"

# else
# # if the container isn't running, remove it 
#     echo "Container $container_name is not running."
#     if [ "!$(podman container inspect $container_name > /dev/null 2>&1)" ];
#         then
# echo "$container_name is not running $(podman rm $container_name)"
# fi

  podman run  \
  -d \
  --name $container_name \
  --restart unless-stopped \
  -p 7575:7575 \
  --user $(id -u $container_name):$(id -g $container_name) \
  -v $BaseDir/configs:/app/data/configs:Z \
  -v $BaseDir/data:/data:Z \
  -v $BaseDir/icons:/app/public/icons:Z \
ghcr.io/ajnart/homarr:latest
